Outside_Diameter_OD,
Nominal_Wall_Thickness_tnom, 
Fabrication_Thickness_Tolerance_tfab,
 Corrosion_Allowance_tcorr,
  Ovality_of_Pipe_Oo,
  SMYS_σsmys,
  SMTS_σsmts,
  Derating_value_temp_yieldStress_fy_temp,
  Derating_value_temp_tensileStress_fu_temp,
  Youngs_Modulus_E ,
  Poission_s_Ratio_ν ,
  Maximum_Fabrication_Factor_alpha_fab,
  Pd,
  Pmin,
  Elevation_at_Pressure_Reference_Level_href,
  Elevation_level_at_Pressure_Point_hl ,
  Product_Density_ρcont,
  Hydrotest_Water_Density_ρt,
  Incidental_to_Design_Pressure_Ratio_gamma_inc,
  Water_Depth_WD,
  Sea_Water_Density_ρsea,
  Min_Elevation_wrt_MSL_hmin,
  Safety_Class_RF_gamma_SCPC,
  Material_Strength_Factor_alpha_u,
  Material_resistant_factor_gamma_m,
  Mill_Pressure_Test_Factor_alpha_mpt,
  System_Pressure_Test_Factor_alpha_spt



  
    values = []


    def save(self):
        
        Outside_Diameter_OD = (self.OD_lineEdit.text()) 
        # print(Outside_Diameter_OD) 
        Nominal_Wall_Thickness_tnom = (self.tnom_lineEdit.text()) 
        # print("t_nom  ", Nominal_Wall_Thickness_tnom)
        Fabrication_Thickness_Tolerance_tfab = (self.tfab_lineEdit.text()) 
        # print("t_fab ", Fabrication_Thickness_Tolerance_tfab)
        Corrosion_Allowance_tcorr = (self.tcorr_lineEdit.text()) 
        # print("t_corr",Corrosion_Allowance_tcorr)
        Ovality_of_Pipe_Oo = (self.Oo_lineEdit.text()) 
        # print("oo ",Ovality_of_Pipe_Oo)
        SMYS_σsmys = (self.SMYS_lineEdit.text()) 
        # print("smys ",SMYS_σsmys)
        SMTS_σsmts = (self.SMTS_lineEdit.text()) 
        # print("smts ",SMTS_σsmts)
        Derating_value_temp_yieldStress_fy_temp = (self.fytemp_lineEdit.text()) 
        # print("fy_temp ",Derating_value_temp_yieldStress_fy_temp)
        Derating_value_temp_tensileStress_fu_temp = (self.futemp_lineEdit.text()) 
        # print("fu_temp ",Derating_value_temp_tensileStress_fu_temp)
        Youngs_Modulus_E = (self.E_lineEdit.text()) 
        # print("E ",Youngs_Modulus_E)
        Poission_s_Ratio_ν = (self.v_lineEdit.text()) 
        # print("v ",Poission_s_Ratio_ν)
        Maximum_Fabrication_Factor_alpha_fab = (self.alpha_fab_lineEdit.text()) 
        # print("alpha_fab ",Maximum_Fabrication_Factor_alpha_fab)
        Material_Strength_Factor_alpha_u = (self.alpha_u_lineEdit.text()) 
        # print("alpha_u ",Material_Strength_Factor_alpha_u)
        Pd = (self.Pd_lineEdit.text()) 
        # print("Pd ",Pd)
        Material_resistant_factor_gamma_m = (self.gamma_m_lineEdit.text()) 
        # print("gamma_m ",Material_resistant_factor_gamma_m)
        Pmin = (self.Pmin_lineEdit.text()) 
        # print("Pmin ",Pmin)
        Elevation_at_Pressure_Reference_Level_href = (self.href_lineEdit.text()) 
        # print("href ",Elevation_at_Pressure_Reference_Level_href)
        Elevation_level_at_Pressure_Point_hl = (self.hl_lineEdit.text()) 
        # print("hl ",Elevation_level_at_Pressure_Point_hl)
        Product_Density_ρcont = (self.rho_cont_lineEdit.text()) 
        # print("rho_cont ",Product_Density_ρcont)
        Hydrotest_Water_Density_ρt = (self.rho_t_lineEdit.text()) 
        # print("rho_t ",Hydrotest_Water_Density_ρt)
        Incidental_to_Design_Pressure_Ratio_gamma_inc = (self.gamma_inc_lineEdit.text()) 
        # print("gamma_inc ",Incidental_to_Design_Pressure_Ratio_gamma_inc)
        Water_Depth_WD = (self.WD_min_lineEdit.text()) 
        # print("WDmin ",min_Water_Depth_WDin)
        Sea_Water_Density_ρsea = (self.rho_sea_lineEdit.text()) 
        # print("rho_sea ",Sea_Water_Density_ρsea)
        Max_Elevation_wrt_MSL_hmax = (self.hmax_lineEdit.text()) 
        # print("hmax ",Max_Elevation_wrt_MSL_hmax)
        Min_Elevation_wrt_MSL_hmin = (self.hmin_lineEdit.text()) 

        Safety_Class_RF_gamma_SCPC = self.limitState_gamma_SCPC_lineedit.text()

        Mill_Pressure_Test_Factor_alpha_mpt =self.alpha_mpt_lineedit.text()

        System_Pressure_Test_Factor_alpha_spt = self.alpha_spt_lineedit.text()

        
        
        self.values.insert(0,Outside_Diameter_OD)
        self.values.insert(1,Nominal_Wall_Thickness_tnom)
        self.values.insert(2,Fabrication_Thickness_Tolerance_tfab)
        self.values.insert(3,Corrosion_Allowance_tcorr)
        self.values.insert(4,Ovality_of_Pipe_Oo)
        self.values.insert(5,SMYS_σsmys)
        self.values.insert(6,SMTS_σsmts)
        self.values.insert(7,Derating_value_temp_yieldStress_fy_temp)
        self.values.insert(8,Derating_value_temp_tensileStress_fu_temp)
        self.values.insert(9,Youngs_Modulus_E)
        self.values.insert(10,Poission_s_Ratio_ν)
        self.values.insert(11,Maximum_Fabrication_Factor_alpha_fab)
        self.values.insert(12,Material_Strength_Factor_alpha_u)
        self.values.insert(13,Pd)
        self.values.insert(14,Material_resistant_factor_gamma_m)
        self.values.insert(15,Pmin)
        self.values.insert(16,Elevation_at_Pressure_Reference_Level_href)
        self.values.insert(17,Elevation_level_at_Pressure_Point_hl)
        self.values.insert(18,Product_Density_ρcont)
        self.values.insert(19,Hydrotest_Water_Density_ρt)
        self.values.insert(20,Incidental_to_Design_Pressure_Ratio_gamma_inc)
        self.values.insert(21,Water_Depth_WD)
        self.values.insert(22,Sea_Water_Density_ρsea)
        self.values.insert(23,Min_Elevation_wrt_MSL_hmin)
        self.values.insert(24,Safety_Class_RF_gamma_SCPC)
        self.values.insert(25,Mill_Pressure_Test_Factor_alpha_mpt)
        self.values.insert(26,System_Pressure_Test_Factor_alpha_spt)

       

        filepath = filedialog.asksaveasfilename(
            # os.getenv('home'),
            initialdir= "C:/Users/DELL/Desktop/trial_run",
            title= "Save As",
            defaultextension= "*.csv",
            filetypes=(
                ("csv file","*.csv"),
                ("HTML file","*.html"),
                ("text file","*.txt"),
                ("All file","*.*")
            )
        )
        print(filepath)
        try:
            if filepath is None:
                return
            else:
                print(filepath)
                # with open(filepath,'w') as file_save:
                with open(filepath, 'w', newline='') as file_save:
                    write_file = csv.writer(file_save)
                    for row in zip(self.values):
                        write_file.writerow(row)
                    
                        file_save.close()

            print("File saved successfully!")
        except:
            print("ERROR in saving your file...!!")


        # try:
        #     filepath = filedialog.asksaveasfilename(
        #         initialdir="C:/Users/DELL/Desktop/trial_run",
        #         title="Save As",
        #         defaultextension=".csv",
        #         filetypes=(
        #             ("CSV file", "*.csv"),
        #             ("HTML file", "*.html"),
        #             ("Text file", "*.txt"),
        #             ("All files", "*.*")
        #         )
        #     )

        #     if not filepath:  # Check if the user clicked cancel
        #         return

        #     print(filepath)

        #     with open(filepath, 'w', newline='') as file_save:
        #         write_file = csv.writer(file_save)
        #         # Transpose the values and write column-wise
        #         for row in zip(*self.values):
        #             write_file.writerow(row)

        #     print("File saved successfully!")

        # except Exception as e:
        #     print(f"ERROR in saving your file: {e}")

